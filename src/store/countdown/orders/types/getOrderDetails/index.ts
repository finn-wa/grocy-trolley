// Code generated by jtd-codegen for TypeScript v0.2.1

export interface OrderDetailsBreadcrumb {
  aisle: unknown;
  department: unknown;
  dynamicGroup: unknown;
  productGroup: unknown;
  shelf: unknown;
}

export interface OrderDetailsContextAdvancedSettingsResponse {
  allowBannerRotation: boolean;
  itemLevelSubstitution: boolean;
  showHaveYouForgotten: boolean;
}

export interface OrderDetailsContextBasketTotals {
  bagFees: string;
  deliveryFees: string;
  eligibilityForDeliverySubscriptionDiscount: string;
  savings: unknown;
  subtotal: string;
  totalIncludingDeliveryFees: string;
  totalItems: number;
}

export interface OrderDetailsContextFulfilmentExpressFulfilment {
  isExpressSlot: boolean;
  isLastExpressHourWindow: boolean;
}

export interface OrderDetailsContextFulfilment {
  address: string;
  areaId: number;
  cutOffTime: unknown;
  endTime: unknown;
  expressFulfilment: OrderDetailsContextFulfilmentExpressFulfilment;
  fulfilmentStoreId: number;
  isAddressInDeliveryZone: boolean;
  isDefaultDeliveryAddress: boolean;
  isSlotToday: boolean;
  locker: unknown;
  method: string;
  perishableCode: string;
  selectedDate: unknown;
  selectedDateWithTZInfo: unknown;
  startTime: unknown;
}

export interface OrderDetailsContextShopperOneCardBalance {
  continuitySpend: unknown;
  isOneCardInError: boolean;
  oneCardCurrency: string;
  oneCardNumber: string;
  onecardPointsBalance: number;
  redeemableRewardVouchers: number;
}

export interface OrderDetailsContextShopper {
  changingOrderId: unknown;
  firstName: string;
  hasActiveDeliverySubscription: boolean;
  hasOnecard: boolean;
  isChangingOrder: boolean;
  isLoggedIn: boolean;
  isPriorityShopper: boolean;
  isShopper: boolean;
  isSupplyLimitOverrideShopper: boolean;
  oneCardBalance: OrderDetailsContextShopperOneCardBalance;
  orderCount: string;
  sessionGroups: number[];
  shopperIdHash: string;
  shopperScvId: string;
}

export interface OrderDetailsContext {
  advancedSettingsResponse: OrderDetailsContextAdvancedSettingsResponse;
  basketTotals: OrderDetailsContextBasketTotals;
  enabledFeatures: string[];
  fulfilment: OrderDetailsContextFulfilment;
  shopper: OrderDetailsContextShopper;
  shoppingListItems: string[];
}

export interface OrderDetailsPartialFailures {
  breadcrumbGenerationFailed: unknown;
  maxSupplyLimitFetchFailed: unknown;
  productGroupFetchFailed: unknown;
  productTagFetchFailed: unknown;
  purchaseUnitFetchFailed: unknown;
  shopperNotesFetchFailed: unknown;
  targetOfferFetchFailed: unknown;
  trolleyQuantityUpdateFailed: unknown;
}

export interface OrderDetailsProductsItemImages {
  big: string;
  small: string;
}

export interface OrderDetailsProductsItemPrice {
  averagePricePerSingleUnit: number | null;
  canShowOriginalPrice: boolean;
  discount: unknown;
  hasBonusPoints: boolean;
  isClubPrice: boolean;
  isNew: boolean;
  isSpecial: boolean;
  isTargetedOffer: boolean;
  originalPrice: number;
  purchasingUnitPrice: unknown;
  salePrice: number;
  savePrice: number;
  total: unknown;
}

export interface OrderDetailsProductsItemProductTagAdditionalTag {
  altText: unknown;
  imagePath: string;
  link: unknown;
  linkTarget: string;
  name: string;
}

export interface OrderDetailsProductsItemProductTag {
  additionalTag: OrderDetailsProductsItemProductTagAdditionalTag | null;
  bonusPoints: unknown;
  multiBuy: unknown;
  tagType: string;
  targetedOffer: unknown;
}

export interface OrderDetailsProductsItemQuantity {
  increment: number;
  max: number;
  min: number;
  purchasingQuantityString: unknown;
  quantityInOrder: unknown;
  value: unknown;
}

export interface OrderDetailsProductsItemSize {
  cupMeasure: string | null;
  cupPrice: number;
  packageType: string | null;
  volumeSize: string | null;
}

export interface OrderDetailsProductsItem {
  adId: unknown;
  averageWeightPerUnit: number | null;
  barcode: string;
  brand: string;
  eachUnitQuantity: unknown;
  hasShopperNotes: boolean;
  images: OrderDetailsProductsItemImages;
  name: string;
  price: OrderDetailsProductsItemPrice;
  priceUnitLabel: unknown;
  productTag: OrderDetailsProductsItemProductTag | null;
  quantity: OrderDetailsProductsItemQuantity;
  selectedPurchasingUnit: string;
  size: OrderDetailsProductsItemSize;
  sku: string;
  slug: string;
  subsAllowed: boolean;
  supportsBothEachAndKgPricing: boolean;
  type: string;
  unit: string;
  variety: string | null;
}

export interface OrderDetailsProducts {
  items: OrderDetailsProductsItem[];
  totalItems: number;
}

export interface OrderDetailsSortOption {
  selected: boolean;
  text: string;
  value: string;
}

export interface OrderDetails {
  action: unknown;
  breadcrumb: OrderDetailsBreadcrumb;
  context: OrderDetailsContext;
  currentPageSize: number;
  currentSortOption: string;
  dasFacets: unknown[];
  facets: unknown[];
  isSuccessful: boolean;
  messages: unknown;
  partialFailures: OrderDetailsPartialFailures;
  products: OrderDetailsProducts;
  rootUrl: string;
  sortOptions: OrderDetailsSortOption[];
  targetedOfferDetails: unknown;
}
