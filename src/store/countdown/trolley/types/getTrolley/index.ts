// Code generated by jtd-codegen for TypeScript v0.2.1

export interface TrolleyContextAdvancedSettingsResponse {
  allowBannerRotation: boolean;
  itemLevelSubstitution: boolean;
  showHaveYouForgotten: boolean;
}

export interface TrolleyContextBasketTotals {
  bagFees: string;
  deliveryFees: string;
  eligibilityForDeliverySubscriptionDiscount: string;
  savings: string;
  subtotal: string;
  totalIncludingDeliveryFees: string;
  totalItems: number;
}

export interface TrolleyContextFulfilmentExpressFulfilment {
  isExpressSlot: boolean;
  isLastExpressHourWindow: boolean;
}

export interface TrolleyContextFulfilment {
  address: string;
  areaId: number;
  cutOffTime: any;
  endTime: any;
  expressFulfilment: TrolleyContextFulfilmentExpressFulfilment;
  fulfilmentStoreId: number;
  isAddressInDeliveryZone: boolean;
  isDefaultDeliveryAddress: boolean;
  isSlotToday: boolean;
  locker: any;
  method: string;
  perishableCode: string;
  selectedDate: any;
  selectedDateWithTZInfo: any;
  startTime: any;
}

export interface TrolleyContextShopperOneCardBalance {
  continuitySpend: any;
  isOneCardInError: boolean;
  oneCardCurrency: string;
  oneCardNumber: string;
  onecardPointsBalance: number;
  redeemableRewardVouchers: number;
}

export interface TrolleyContextShopper {
  changingOrderId: any;
  firstName: string;
  hasActiveDeliverySubscription: boolean;
  hasOnecard: boolean;
  isChangingOrder: boolean;
  isLoggedIn: boolean;
  isPriorityShopper: boolean;
  isShopper: boolean;
  isSupplyLimitOverrideShopper: boolean;
  oneCardBalance: TrolleyContextShopperOneCardBalance;
  orderCount: string;
  sessionGroups: number[];
  shopperIdHash: string;
  shopperScvId: string;
}

export interface TrolleyContext {
  advancedSettingsResponse: TrolleyContextAdvancedSettingsResponse;
  basketTotals: TrolleyContextBasketTotals;
  enabledFeatures: string[];
  fulfilment: TrolleyContextFulfilment;
  shopper: TrolleyContextShopper;
  shoppingListItems: string[];
}

export interface TrolleyItemProductImages {
  big: string;
  small: string;
}

export interface TrolleyItemProductPrice {
  averagePricePerSingleUnit: number | null;
  canShowOriginalPrice: boolean;
  discount: string | null;
  hasBonusPoints: boolean;
  isClubPrice: boolean;
  isNew: boolean;
  isSpecial: boolean;
  isTargetedOffer: boolean;
  originalPrice: number;
  purchasingUnitPrice: any;
  salePrice: number;
  savePrice: number;
  total: string | null;
}

export interface TrolleyItemProductProductTagAdditionalTag {
  altText: any;
  imagePath: string;
  link: any;
  linkTarget: string;
  name: string;
}

export interface TrolleyItemProductProductTag {
  additionalTag: TrolleyItemProductProductTagAdditionalTag | null;
  bonusPoints: any;
  multiBuy: any;
  tagType: string;
  targetedOffer: any;
}

export interface TrolleyItemProductQuantity {
  increment: number;
  max: number;
  min: number;
  purchasingQuantityString: string;
  quantityInOrder: number;
  value: number;
}

export interface TrolleyItemProductSize {
  cupMeasure: string | null;
  cupPrice: number;
  packageType: string | null;
  volumeSize: string | null;
}

export interface TrolleyItemProduct {
  adId: any;
  averageWeightPerUnit: number | null;
  barcode: any;
  brand: any;
  eachUnitQuantity: any;
  hasShopperNotes: boolean;
  images: TrolleyItemProductImages;
  name: string;
  price: TrolleyItemProductPrice;
  priceUnitLabel: string;
  productTag: TrolleyItemProductProductTag | null;
  quantity: TrolleyItemProductQuantity;
  selectedPurchasingUnit: string | null;
  size: TrolleyItemProductSize;
  sku: string;
  slug: string;
  subsAllowed: boolean;
  supportsBothEachAndKgPricing: boolean;
  type: string;
  unit: string;
  variety: any;
  dasFacetsUrl?: string;
}

export interface TrolleyItem {
  categoryDescription: string;
  categoryType: string;
  products: TrolleyItemProduct[];
}

export interface Trolley {
  context: TrolleyContext;
  isSuccessful: boolean;
  itemCount: number;
  items: TrolleyItem[];
  messages: any[];
  rootUrl: string;
}
